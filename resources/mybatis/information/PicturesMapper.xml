<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PicturesMapper">
	
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into TB_PICTURES(
			TITLE,	
			NAME,	
			PATH,	
			CREATETIME,	
			MASTER_ID,	
			BZ,	
			PICTURES_ID
		) values (
			#{TITLE},	
			#{NAME},	
			#{PATH},	
			#{CREATETIME},	
			#{MASTER_ID},	
			#{BZ},	
			#{PICTURES_ID}
		)
	</insert>
	
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from TB_PICTURES
		where 
			PICTURES_ID = #{PICTURES_ID}
	</delete>
	
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update  TB_PICTURES
			set 
				TITLE = #{TITLE},
				PATH = #{PATH},
				<if test="NAME != null and NAME != ''">
				NAME = #{NAME},
				</if>
				MASTER_ID = #{MASTER_ID},
				BZ = #{BZ},
			PICTURES_ID = PICTURES_ID
			where 
				PICTURES_ID = #{PICTURES_ID}
	</update>
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
			TITLE,	
			NAME,	
			PATH,	
			CREATETIME,	
			MASTER_ID,	
			BZ,	
			PICTURES_ID
		from 
			TB_PICTURES
		where 
			PICTURES_ID = #{PICTURES_ID}
	</select>
	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
				a.TITLE,	
				a.NAME,	
				a.PATH,	
				a.CREATETIME,	
				a.MASTER_ID,	
				a.BZ,	
				a.PICTURES_ID
		from 
				TB_PICTURES a
		where 1 = 1
		<if test="pd.KEYW != null and pd.KEYW != ''"><!-- 关键词检索 -->
			and
				(
					 a.TITLE LIKE CONCAT(CONCAT('%', #{pd.KEYW}),'%')
					 or 
					 a.NAME LIKE CONCAT(CONCAT('%', #{pd.KEYW}),'%') 
					 or
					 a.PICTURES_ID LIKE CONCAT(CONCAT('%', #{pd.KEYW}),'%')
					 or
					 a.MASTER_ID LIKE CONCAT(CONCAT('%', #{pd.KEYW}),'%')
				)
		</if>
		ORDER BY a.id DESC
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
				a.TITLE,	
				a.NAME,	
				a.PATH,	
				a.CREATETIME,	
				a.MASTER_ID,	
				a.BZ,	
				a.PICTURES_ID
		from 
				TB_PICTURES a
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from TB_PICTURES
		where 
			PICTURES_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 批量获取 -->
	<select id="getAllById" parameterType="String" resultType="pd">
		select PATH from TB_PICTURES
		where 
			PICTURES_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</select>
	
	<!-- 删除图片 -->
	<update id="delTp" parameterType="pd">
		update  TB_PICTURES
			set 
				PATH			= ''
			where 
				PICTURES_ID = #{PICTURES_ID}
	</update>
	
	<insert id="insertorder"  parameterType="java.util.List" >
		insert into t_Orders
		(orderid,sku,matchid,quantity,tolocation,area,way,address,batchid,fromlocation,state,truequantity,checkquantity,downdate,
		readtime,returntime,lighttime,oprationtime,oprationstate,shopid,classes,goodssize,oprationcode,boxcode,goodscode,corlorcode,sizecode,price,
		discount,suppliercode,clientcode,partcode,barcode,goodsname,goodstype,prodarea,lotno,tasktype,gateid,checkuser,prino,block
		,wmsboxcode,orderway,boxweight,clientname,bkbarcode,wmsorderid,shopname)
		values 
		<foreach item="item" index="index" collection="list" separator="," >
      (#{item.orderid},#{item.sku},#{item.matchid},#{item.quantity},#{item.tolocation},#{item.area},#{item.way},#{item.address},#{item.batchid},#{item.fromlocation},
#{item.state},#{item.truequantity},#{item.checkquantity},#{item.downdate},#{item.readtime},#{item.returntime},#{item.lighttime},#{item.oprationtime},#{item.oprationstate},
#{item.shopid},#{item.classes},#{item.goodssize},#{item.oprationcode},#{item.boxcode},#{item.goodscode},#{item.corlorcode},#{item.sizecode},#{item.price},#{item.discount},
#{item.suppliercode},#{item.clientcode},#{item.partcode},#{item.barcode},#{item.goodsname},#{item.goodstype},#{item.prodarea},#{item.lotno},#{item.tasktype},#{item.gateid},#{item.checkuser},
#{item.prino},#{item.block},#{item.wmsboxcode},#{item.orderway},#{item.boxweight},#{item.clientname},#{item.bkbarcode},#{item.wmsorderid},#{item.shopname})
		</foreach>
	</insert>
	
	<insert id="insertstore"  parameterType="java.util.List">
		insert into t_Store
		(id,name,sorgname,address,linktel,linkman,location)
		values 
		<foreach item="item" index="index" collection="list"  separator=",">
    	 (#{item.id},#{item.name},#{item.sorgname},#{item.address},#{item.linktel},#{item.linkman},#{item.location})
		</foreach>
	</insert>
	
	
	<!-- 分拣商品信息查询 -->
	<select id="findorderstorelistPage" parameterType="page" resultType="pd">
		<if test=" pd.searchcriteria &lt;5 and pd.searchcriteria &gt;0 ">
			SELECT o.oprationtime oprationtime,o.barcode barcode,o.goodsname goodsname,o.goodssize goodssize,o.quantity quantity,o.shopid shopid,
			s.name shopname,o.oprationstate state,s.location  location FROM t_orders o 
			left join t_Store s on 	o.tolocation = s.location and o.shopid=s.id
			where 1=1
			<if test="pd.startDate!=''">
				AND o.oprationtime&gt; #{pd.startDate}
			</if>
			<if test="pd.endDate!=''">
				AND o.oprationtime&lt; #{pd.endDate}
			</if>
			<if test="pd.searchcriteria==1">
				AND o.oprationstate = 0 
			</if>
			<if test="pd.searchcriteria==2">
				AND o.oprationstate = '3' AND o.quantity != 0
			</if>
			<if test="pd.searchcriteria==3 and pd.laneway!='' and pd.laneway &gt; 0">
				AND o.block = ${pd.laneway}
			</if>
			<if test="pd.keyword!='' and pd.searchcriteria!=4 ">
				AND o.barcode  LIKE CONCAT(CONCAT('%', #{pd.keyword}),'%')
			</if>
			<if test="pd.searchcriteria==4 and pd.keyword!='' ">
				AND s.name LIKE CONCAT(CONCAT('%', #{pd.keyword}),'%')
			</if>
			ORDER BY s.location,o.barcode ASC 
		</if>
		<if test="pd.searchcriteria>=5">
			SELECT s.name shopname,s.location location FROM Store s   WHERE 1=1
			<if test="pd.searchcriteria==5">
				 AND s.name LIKE CONCAT(CONCAT('%', #{pd.keyword}),'%')
			</if>
			<if test="pd.searchcriteria==6">
				AND s.location LIKE CONCAT(CONCAT('%', #{pd.keyword}),'%')
			</if>
			ORDER BY s.location  ASC
		</if>
		
	</select>
	
	<!-- 列表(全部) -->
	<select id="excelOfMerchant" parameterType="pd" resultType="pd">
		<if test=" searchcriteria &lt;5 and searchcriteria &gt;0 ">
			SELECT o.oprationtime oprationtime,o.barcode barcode,o.goodsname goodsname,o.goodssize goodssize,o.quantity quantity,o.shopid shopid,
			s.name shopname,o.oprationstate state,s.location  location FROM t_orders o,t_Store s WHERE o.tolocation=s.location 
			
			<if test="startDate!=''">
				AND o.oprationtime&gt; #{startDate}
			</if>
			<if test="endDate!=''">
				AND o.oprationtime&lt; #{endDate}
			</if>
			<if test="searchcriteria==1">
				AND o.oprationstate = 0 
			</if>
			<if test="searchcriteria==2">
				AND o.oprationstate = '3' AND o.quantity != 0
			</if>
			<if test="searchcriteria==3 and laneway!='' and laneway &gt; 0">
				AND o.block = ${pd.laneway}
			</if>
			<if test="keyword!='' and searchcriteria!=4 ">
				AND o.barcode  LIKE CONCAT(CONCAT('%', #{keyword}),'%')
			</if>
			<if test="searchcriteria==4 and keyword!='' ">
				AND s.name LIKE CONCAT(CONCAT('%', #{keyword}),'%')
			</if>
			ORDER BY s.location,o.barcode ASC 
		</if>
		<if test="searchcriteria>=5">
			SELECT s.name shopname,s.location location FROM Store s   WHERE 1=1
			<if test="searchcriteria==5">
				 AND s.name LIKE CONCAT(CONCAT('%', #{keyword}),'%')
			</if>
			<if test="searchcriteria==6">
				AND s.location LIKE CONCAT(CONCAT('%', #{keyword}),'%')
			</if>
			ORDER BY s.location  ASC
		</if>
	</select>
	
	
	
</mapper>