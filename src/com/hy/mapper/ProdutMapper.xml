<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hy.mapper.ProdutMapper">
	<update id="updateOrderItem">
		UPDATE t_selling_order_item SET
		quantity=#{num}, final_quantity=#{num}
		where id=#{id}
	</update>

	<update id="submitOrder" parameterType="com.hy.entity.base.SellingOrder">
		UPDATE t_selling_order
		set group_num = #{groupNum},
		order_num = #{orderNum},
		order_amount = #{orderAmount},
		create_time = #{createTime},
		checked_state = 12
		where
		user_id=#{userId} AND checked_state in(11,12) and id=#{id}
	</update>
	<update id="updateOrderItemById" parameterType="com.hy.entity.base.OrderItem">
		  update  t_selling_order_item
		  <trim prefix="set" suffixOverrides=",">
			  <if test="groupNum != null and groupNum != '' ">
				  group_num = #{groupNum},
			  </if>
			  <if test="orderNum != null and orderNum != '' ">
				  order_num = #{orderNum},
			  </if>
			  <if test="giftQuantity != null and giftQuantity != 0 ">
                  gift_quantity = #{giftQuantity},
			  </if>

			  <if test="createTime != null  ">
				  create_time = #{createTime},
			  </if>
		  </trim>
		  where id=#{id}
	</update>

	<update id="updateUser">
		UPDATE sys_user set PASSWORD=#{newPw} WHERE USERNAME=#{userName}
	</update>
	<select id="getOrderById" resultType="com.hy.entity.base.SellingOrder">
		select
		id as id ,
		order_num as orderNum
		from t_selling_order
		where id =#{orderId}
	</select>
	<delete id="deleteOrderItem">
		delete from t_selling_order_item where id=#{id}
	</delete>

	<select id="getList" resultType="com.hy.entity.base.Goods">
		SELECT
		tp.id,
		concat('/',tp.proimage) as image ,
		tp.product_name as goodsName,
		CONCAT(tp.product_num,if(
		(
		(ts.supplier_name like '%昆仑好客%')
		or (tp.product_name like '%昆悦%')
		or (tp.product_name like '%红牛%')
		or (tp.product_name like '%武夷山%')
		or (tp.product_name like '%坚果帮%')
		or (tp.product_name like '%东北冰原%')
		)
		,'(集采)','(统采)')) AS goodsCode,
		if(ts.supplier_name like '%东方快船%','(进口)','') AS isImport,
		tpp.product_price AS goodsRetailPrice,
        if((select id from t_product_activity where product_id = tp.id
        and type = 1 and state = 1  and effective_time &lt; NOW()  AND NOW() BETWEEN begintime and endtime) is NULL,'','(买赠)'
        ) as activity
		FROM
		t_product tp
		LEFT JOIN
		tp_product_price AS tpp ON tpp.product_id = tp.id AND tpp.price_type = 1
		LEFT JOIN tp_supplier ts ON ts.id=tpp.relation_id
        LEFT JOIN t_product_activity as tpa ON  tpa.product_id = tp.id
        WHERE
		tp.is_shelve=1
		<if test="categoryId != null and categoryId != ''">
			and tp.product_type_id=#{categoryId}
		</if>
		<if test="search != null and search != ''">
			and (tp.product_name LIKE CONCAT('%','${search}','%')
			or tp.product_num  LIKE CONCAT('%','${search}','%')
			or tp.bar_code  LIKE CONCAT('%','${search}','%')
			)
		</if>
		order by activity desc
		limit #{offset}, #{size}
	</select>
	<select id="getCategory" resultType="com.hy.entity.product.ProductType">
        select id, classify_name as classifyName from tp_product_type WHERE  state=2
    </select>
	<select id="getCount" resultType="java.lang.Long">
		SELECT
		count(*)
		FROM
		t_product tp
		where
		is_shelve=1
		<if test="categoryId != null and categoryId != ''">
			and tp.product_type_id=#{categoryId}
		</if>

	</select>
	<select id="getSearchCount" resultType="java.lang.Long">
		SELECT
		count(*)
		FROM
		t_product tp
		WHERE tp.is_shelve=1
		<if test="search != null and search != ''">
			and (tp.product_name LIKE CONCAT('%','${search}','%')
			or tp.product_num  LIKE CONCAT('%','${search}','%')
			or tp.bar_code  LIKE CONCAT('%','${search}','%')
			)
		</if>
	</select>
	<select id="getById" resultType="com.hy.entity.base.Goods">
		SELECT
		tp.id,
		concat('/',tp.proimage) as image ,
  tp.product_name as goodsName,
  CONCAT(tp.product_num,if(
		(
		(ts.supplier_name like '%昆仑好客%')
		or (tp.product_name like '%昆悦%')
		or (tp.product_name like '%红牛%')
		or (tp.product_name like '%武夷山%')
		or (tp.product_name like '%坚果帮%')
		or (tp.product_name like '%东北冰原%')
		)
		,'(集采)','(统采)')) AS goodsCode,
		if(ts.supplier_name like '%东方快船%','(进口)','') AS isImport,
	tpp1.product_price as supplyPrice,
  	tpy.classify_name as type,
  tpu.unit_name as goodsSaleUnit,
tpu.unit_name as packUnit ,
  tp.box_number as  standard,
  tp.min_order_num as  minOrderNum,
  tpp2.product_price as goodsRetailPrice,
  tp.taxes grossMargin,
  tp.expire_days as  goodsShelfLife,
  tp.taxes goodsTaxRate,
  ts.supplier_num supplierCode,
  tp.bar_code as goodsBarcode,
  ts.supplier_name as supplierName,
  tp.remarks  as remark
		FROM
		t_product AS tp
		LEFT JOIN tp_product_type AS tpy ON tpy.id =
		tp.product_type_id
		LEFT JOIN t_product_inventory AS tpi ON
		tpi.product_id = tp.id
		AND tpi.warehouse_id = 1
		LEFT JOIN tp_warehouse
		AS tpw1 ON tpi.warehouse_id = tpw1.id
		LEFT JOIN tp_product_price AS
		tpp1 ON tpp1.product_id = tp.id
		AND tpp1.price_type = 1

		LEFT JOIN
		tp_product_price AS tpp2 ON tpp2.product_id = tp.id
		AND tpp2.price_type
		= 2
		LEFT JOIN tp_supplier AS ts ON ts.id = tpp1.relation_id
		LEFT JOIN
		tp_cargo_space AS tcs ON tcs.id = tp.cargo_space_id

		left join
		tp_meterage_unit as tpu on tpu.id=tp.unit and tpu.status=1
		WHERE
		tp.is_shelve=1 and  tp.id = #{id}
		LIMIT 0,
		1
	</select>
	<select id="getSellByUserId" resultType="com.hy.entity.base.SellingOrder">
		SELECT
			id,
			order_num orderNum,
			group_num groupNum,
			checked_state checkedState,
			order_date orderDate,
			deliver_style deliverStyle,
			deliver_address deliverAddress,
			manager_name managerName,
			manager_tel managerTel,
			create_time createTime
			FROM t_selling_order
			WHERE (checked_state = 11 or checked_state = 12)
			and user_id=#{userId}
	</select>
	<select id="getMerchantByName" resultType="com.hy.entity.product.Merchant">
		select
			merchant_num merchantNum,
			merchant_name merchantName,
			contact_person contactPerson,
			mobile mobile,
			address address,
			id
		from
			t_merchant
			where merchant_num=#{username}
	</select>
	<select id="getOrderItemByOrderNum" resultType="java.lang.Integer">
		select count(*) from t_selling_order_item where order_num=#{orderNum} and product_id=#{id}
	</select>

	<select id="getOrderItems" resultType="com.hy.entity.base.OrderItem">
		SELECT
			oi.id,
			concat('/',p.proimage) as image ,
			min_order_num minOrderNum,
			product_type_id productTypeId,
			p.product_name goodsName,
			CONCAT(p.product_num,if(
		(
		(ts.supplier_name like '%昆仑好客%')
		or (p.product_name like '%昆悦%')
		or (p.product_name like '%红牛%')
		or (p.product_name like '%武夷山%')
		or (p.product_name like '%坚果帮%')
		or (p.product_name like '%东北冰原%')
		)
		,'(集采)','(统采)')) AS goodsCode,
		if(ts.supplier_name like '%东方快船%','(进口)','') AS isImport,
			oi.sale_price goodsUnitPrice ,
			oi.quantity goodsAmount,
			o.id orderId,
			if((select id from t_product_activity where product_id = p.id
        and type = 1 and state = 1  and effective_time &lt; NOW()  AND NOW() BETWEEN begintime and endtime) is NULL,'','(买赠)'
        ) as activity
		FROM t_selling_order o
			JOIN t_selling_order_item oi ON o.order_num = oi.order_num
			JOIN t_product p ON p.id = oi.product_id
			left join tp_product_price tppc on tppc.product_id = p.id and tppc.price_type = 1
			LEFT JOIN t_product_activity as tpa ON  tpa.product_id = p.id and tpa.type != 1 and tpa.state !=1
		LEFT JOIN tp_supplier ts ON ts.id=tppc.relation_id
		WHERE o.user_id = #{userId} AND (o.checked_state = 11 or o.checked_state = 12 )
	</select>
	<select id="getOrderList" resultType="com.hy.entity.base.AppOrder">
		select
			order_num id,
			order_num code,
			DATE_FORMAT(create_time,'%Y-%m-%d %T') as createDate
		from t_selling_order where user_id= #{userId} AND (checked_state = 11 or checked_state = 12 )
		 order by createDate desc
	</select>
	<select id="getOrderItemByNum" resultType="com.hy.entity.base.OrderItem">
		SELECT
			oi.id,
			p.id productId,
			p.is_shelve isShelve,
			p.product_name goodsName,
			concat('/',p.proimage) as image ,
			p.product_num goodsCode,
			oi.sale_price goodsUnitPrice ,
			oi.quantity goodsAmount,
			o.id orderId
		FROM t_selling_order o
			JOIN t_selling_order_item oi ON o.order_num = oi.order_num
			JOIN t_product p ON p.id = oi.product_id
		WHERE o.order_num=#{orderNum}

	</select>
	<select id="hasUser" resultType="java.lang.Integer">
		select count(*) from sys_user where USERNAME=#{userName} AND PASSWORD=#{ps}
	</select>


	<insert id="save" useGeneratedKeys="true" parameterType="com.hy.entity.base.SellingOrder">
		insert into t_selling_order(
			order_num,
			group_num,
			checked_state,
			order_date,
			deliver_style,
			deliver_address,
			manager_name,
			manager_tel,
			user_id,
			merchant_id,
			deliver_date,
			order_type,
			ck_id,
			type
		) values (
			#{sellingOrder.orderNum},
			#{sellingOrder.groupNum},
			#{sellingOrder.checkedState},
			#{sellingOrder.orderDate},
			#{sellingOrder.deliverStyle},
			#{sellingOrder.deliverAddress},
			#{sellingOrder.managerName},
			#{sellingOrder.managerTel},
			#{sellingOrder.userId},
			#{sellingOrder.merchantId},
			#{sellingOrder.deliverDate},
			#{sellingOrder.orderType},
			#{sellingOrder.ckId},
			#{sellingOrder.type}
		)
	</insert>
	<insert id="saveOrderItem" useGeneratedKeys="true" parameterType="com.hy.entity.order.SellingOrderItem">
		INSERT INTO t_selling_order_item (order_num, group_num, product_id,
			purchase_price, sale_price, final_quantity, quantity,
			creator, state)
		VALUES (#{sellingOrderItem.orderNum},
				#{sellingOrderItem.groupNum},
				#{sellingOrderItem.productId},
				#{sellingOrderItem.purchasePrice},
				#{sellingOrderItem.salePrice},
				#{sellingOrderItem.finalQuantity},
				#{sellingOrderItem.quantity},
				#{sellingOrderItem.creator},
				#{sellingOrderItem.state})


	</insert>
    <select id="getProductActivity" resultType="com.hy.entity.base.ProductActivity">
        select
        id,
        product_id productId,
        quantity,
        product_activity productActivity,
        final_quantity finalQuantity
        from t_product_activity
        where product_id = #{productId}
        and type = 1 and state = 1  and effective_time &lt;  NOW()  AND NOW() BETWEEN begintime and endtime
    </select>

</mapper>
